# coding=utf-8
"""
This file is autogenerated by python script @ 20200726-10:57:03
"""
import sys
import os
import datetime,time

#from PowerPCBEnums import *

__author__ = 'SayCV'

import logging

logger = logging.getLogger(__name__)

class IPowerPCBComp(object):
    def __init__(self, obj=None):
        self.obj = obj


    @property
    def Application(self):
        return self.obj.Application

    @property
    def Parent(self):
        return self.obj.Parent

    @property
    def Name(self):
        return self.obj.Name

    @property
    def selected(self):
        return self.obj.selected

    @selected.setter
    def selected(self, selected):
        self.obj.selected=selected

    @property
    def Highlighted(self):
        return self.obj.Highlighted

    @Highlighted.setter
    def Highlighted(self, Highlighted):
        self.obj.Highlighted=Highlighted

    @property
    def PartType(self):
        return self.obj.PartType

    @PartType.setter
    def PartType(self, PartType):
        self.obj.PartType=PartType

    @property
    def Decal(self):
        return self.obj.Decal

    @Decal.setter
    def Decal(self, Decal):
        self.obj.Decal=Decal

    @property
    def layer(self):
        return self.obj.layer

    @property
    def LayerName(self):
        return self.obj.LayerName

    @property
    def Pins(self):
        return self.obj.Pins

    @property
    def PositionX(self):
        return self.obj.PositionX

    @property
    def PositionY(self):
        return self.obj.PositionY

    @layer.setter
    def layer(self, layer):
        self.obj.layer=layer

    @property
    def Orientation(self):
        return self.obj.Orientation

    @property
    def IsSMD(self):
        return self.obj.IsSMD

    @Orientation.setter
    def Orientation(self, Orientation):
        self.obj.Orientation=Orientation

    @property
    def Glued(self):
        return self.obj.Glued

    @property
    def ObjectType(self):
        return self.obj.ObjectType

    @Glued.setter
    def Glued(self, Glued):
        self.obj.Glued=Glued

    @property
    def Installed(self):
        return self.obj.Installed

    @property
    def Substituted(self):
        return self.obj.Substituted

    @property
    def DecalCompatibleList(self):
        return self.obj.DecalCompatibleList

    @property
    def Placed(self):
        return self.obj.Placed

    @property
    def Attributes(self):
        return self.obj.Attributes

    @property
    def DecalAttributes(self):
        return self.obj.DecalAttributes

    @property
    def PartTypeAttributes(self):
        return self.obj.PartTypeAttributes

    @property
    def PartTypeLogic(self):
        return self.obj.PartTypeLogic

    @Installed.setter
    def Installed(self, Installed):
        self.obj.Installed=Installed

    @property
    def PartTypeECORegistered(self):
        return self.obj.PartTypeECORegistered

    @property
    def Move(self):
        return self.obj.Move

    @property
    def PartTypeObject(self):
        return self.obj.PartTypeObject

    @property
    def IsDiePart(self):
        return self.obj.IsDiePart

    @property
    def DieLength(self):
        return self.obj.DieLength

    @property
    def DieWidth(self):
        return self.obj.DieWidth

    @property
    def DieHeight(self):
        return self.obj.DieHeight

    @property
    def WireBondRulesLengthMinimum(self):
        return self.obj.WireBondRulesLengthMinimum

    @property
    def WireBondRulesLengthMaximum(self):
        return self.obj.WireBondRulesLengthMaximum

    @property
    def WireBondRulesAngleMaximum(self):
        return self.obj.WireBondRulesAngleMaximum

    @property
    def WireBondRulesClearanceWireToWire(self):
        return self.obj.WireBondRulesClearanceWireToWire

    @property
    def WireBondRulesClearanceWireToPad(self):
        return self.obj.WireBondRulesClearanceWireToPad

    @property
    def CBPs(self):
        return self.obj.CBPs

    @property
    def SBPs(self):
        return self.obj.SBPs

    @property
    def Wirebonds(self):
        return self.obj.Wirebonds

    @property
    def Labels(self):
        return self.obj.Labels

    @property
    def CenterX(self):
        return self.obj.CenterX

    @property
    def CenterY(self):
        return self.obj.CenterY

    @property
    def MoveCenter(self):
        return self.obj.MoveCenter

    @PartTypeECORegistered.setter
    def PartTypeECORegistered(self, PartTypeECORegistered):
        self.obj.PartTypeECORegistered=PartTypeECORegistered

