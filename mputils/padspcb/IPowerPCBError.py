# coding=utf-8
"""
This file is autogenerated by python script @ 20200726-10:57:03
"""
import sys
import os
import datetime,time

#from PowerPCBEnums import *

__author__ = 'SayCV'

import logging

logger = logging.getLogger(__name__)

class IPowerPCBError(object):
    def __init__(self, obj=None):
        self.obj = obj


    @property
    def Application(self):
        return self.obj.Application

    @property
    def Parent(self):
        return self.obj.Parent

    @property
    def ObjectType(self):
        return self.obj.ObjectType

    @property
    def LayerNumber(self):
        return self.obj.LayerNumber

    @property
    def PositionX(self):
        return self.obj.PositionX

    @property
    def PositionY(self):
        return self.obj.PositionY

    @property
    def ErrorType(self):
        return self.obj.ErrorType

    @property
    def ErrorClass(self):
        return self.obj.ErrorClass

    @property
    def IsClearanceError(self):
        return self.obj.IsClearanceError

    @property
    def IsConnectivityError(self):
        return self.obj.IsConnectivityError

    @property
    def IsHighSpeedError(self):
        return self.obj.IsHighSpeedError

    @property
    def IsMiscError(self):
        return self.obj.IsMiscError

    @property
    def IsTestPointError(self):
        return self.obj.IsTestPointError

    @property
    def IsLatiumError(self):
        return self.obj.IsLatiumError

    @property
    def IsIgnoredFlag(self):
        return self.obj.IsIgnoredFlag

    @property
    def IsInvisibleFlag(self):
        return self.obj.IsInvisibleFlag

    @property
    def Conflicts(self):
        return self.obj.Conflicts

    @property
    def Description(self):
        return self.obj.Description

    @property
    def ActualValue(self):
        return self.obj.ActualValue

    @property
    def RequiredValueMin(self):
        return self.obj.RequiredValueMin

    @property
    def RequiredValueMax(self):
        return self.obj.RequiredValueMax

    @property
    def ValueType(self):
        return self.obj.ValueType

    @property
    def HasActualValue(self):
        return self.obj.HasActualValue

    @property
    def HasRequiredValues(self):
        return self.obj.HasRequiredValues

    @property
    def Name(self):
        return self.obj.Name

