# coding=utf-8
"""
This file is autogenerated by python script @ 20200808-12:11:09
"""
import sys
import os
import datetime,time

#from PowerPCBEnums import *

__author__ = 'SayCV'

import logging

logger = logging.getLogger(__name__)

class IHyperLynxDrcSettings(object):
    def __init__(self, obj=None):
        self.obj = obj


    @property
    def Paths(self):
        return self.obj.Paths

    @property
    def Units(self):
        return self.obj.Units

    @Paths.setter
    def Paths(self, Paths):
        self.obj.Paths=Paths

    @property
    def GeneralSettings(self):
        return self.obj.GeneralSettings

    @Units.setter
    def Units(self, Units):
        self.obj.Units=Units

    @property
    def DefaultValues(self):
        return self.obj.DefaultValues

    @GeneralSettings.setter
    def GeneralSettings(self, GeneralSettings):
        self.obj.GeneralSettings=GeneralSettings

    @property
    def ComponentOutlineLayerEnabled(self):
        return self.obj.ComponentOutlineLayerEnabled

    @DefaultValues.setter
    def DefaultValues(self, DefaultValues):
        self.obj.DefaultValues=DefaultValues

    @property
    def ComponentOutlineLayersCount(self):
        return self.obj.ComponentOutlineLayersCount

    @property
    def ComponentOutlineLayerName(self):
        return self.obj.ComponentOutlineLayerName

    @property
    def RemoveComponentOutlineLayer(self):
        return self.obj.RemoveComponentOutlineLayer

    @property
    def TransmissionLines(self):
        return self.obj.TransmissionLines

    @ComponentOutlineLayerEnabled.setter
    def ComponentOutlineLayerEnabled(self, ComponentOutlineLayerEnabled):
        self.obj.ComponentOutlineLayerEnabled=ComponentOutlineLayerEnabled

    @property
    def Coupling(self):
        return self.obj.Coupling

    @TransmissionLines.setter
    def TransmissionLines(self, TransmissionLines):
        self.obj.TransmissionLines=TransmissionLines

    @property
    def DifferentialPairs(self):
        return self.obj.DifferentialPairs

    @Coupling.setter
    def Coupling(self, Coupling):
        self.obj.Coupling=Coupling

    @property
    def Models(self):
        return self.obj.Models

    @DifferentialPairs.setter
    def DifferentialPairs(self, DifferentialPairs):
        self.obj.DifferentialPairs=DifferentialPairs

    @property
    def ConstraintManager(self):
        return self.obj.ConstraintManager

    @Models.setter
    def Models(self, Models):
        self.obj.Models=Models

    @property
    def Violations(self):
        return self.obj.Violations

    @ConstraintManager.setter
    def ConstraintManager(self, ConstraintManager):
        self.obj.ConstraintManager=ConstraintManager

    @property
    def ShareLists(self):
        return self.obj.ShareLists

    @Violations.setter
    def Violations(self, Violations):
        self.obj.Violations=Violations

    @property
    def BoardViewerGeneral(self):
        return self.obj.BoardViewerGeneral

    @ShareLists.setter
    def ShareLists(self, ShareLists):
        self.obj.ShareLists=ShareLists

    @property
    def BoardViewerInfoTips(self):
        return self.obj.BoardViewerInfoTips

    @BoardViewerGeneral.setter
    def BoardViewerGeneral(self, BoardViewerGeneral):
        self.obj.BoardViewerGeneral=BoardViewerGeneral

    @property
    def BoardViewerInfoTipsComponent(self):
        return self.obj.BoardViewerInfoTipsComponent

    @BoardViewerInfoTips.setter
    def BoardViewerInfoTips(self, BoardViewerInfoTips):
        self.obj.BoardViewerInfoTips=BoardViewerInfoTips

    @property
    def BoardViewerInfoTipsPin(self):
        return self.obj.BoardViewerInfoTipsPin

    @BoardViewerInfoTipsComponent.setter
    def BoardViewerInfoTipsComponent(self, BoardViewerInfoTipsComponent):
        self.obj.BoardViewerInfoTipsComponent=BoardViewerInfoTipsComponent

    @property
    def BoardViewerInfoTipsVia(self):
        return self.obj.BoardViewerInfoTipsVia

    @BoardViewerInfoTipsPin.setter
    def BoardViewerInfoTipsPin(self, BoardViewerInfoTipsPin):
        self.obj.BoardViewerInfoTipsPin=BoardViewerInfoTipsPin

    @property
    def BoardViewerInfoTipsMountingHole(self):
        return self.obj.BoardViewerInfoTipsMountingHole

    @BoardViewerInfoTipsVia.setter
    def BoardViewerInfoTipsVia(self, BoardViewerInfoTipsVia):
        self.obj.BoardViewerInfoTipsVia=BoardViewerInfoTipsVia

    @property
    def BoardViewerInfoTipsSegment(self):
        return self.obj.BoardViewerInfoTipsSegment

    @BoardViewerInfoTipsMountingHole.setter
    def BoardViewerInfoTipsMountingHole(self, BoardViewerInfoTipsMountingHole):
        self.obj.BoardViewerInfoTipsMountingHole=BoardViewerInfoTipsMountingHole

    @property
    def BoardViewerInfoTipsAreaFill(self):
        return self.obj.BoardViewerInfoTipsAreaFill

    @BoardViewerInfoTipsSegment.setter
    def BoardViewerInfoTipsSegment(self, BoardViewerInfoTipsSegment):
        self.obj.BoardViewerInfoTipsSegment=BoardViewerInfoTipsSegment

    @property
    def BoardViewerReferenceTextComponent(self):
        return self.obj.BoardViewerReferenceTextComponent

    @BoardViewerInfoTipsAreaFill.setter
    def BoardViewerInfoTipsAreaFill(self, BoardViewerInfoTipsAreaFill):
        self.obj.BoardViewerInfoTipsAreaFill=BoardViewerInfoTipsAreaFill

    @property
    def BoardViewerReferenceTextPin(self):
        return self.obj.BoardViewerReferenceTextPin

    @BoardViewerReferenceTextComponent.setter
    def BoardViewerReferenceTextComponent(self, BoardViewerReferenceTextComponent):
        self.obj.BoardViewerReferenceTextComponent=BoardViewerReferenceTextComponent

    @property
    def BoardViewerVisibility(self):
        return self.obj.BoardViewerVisibility

    @BoardViewerReferenceTextPin.setter
    def BoardViewerReferenceTextPin(self, BoardViewerReferenceTextPin):
        self.obj.BoardViewerReferenceTextPin=BoardViewerReferenceTextPin

    @property
    def BoardViewerColors(self):
        return self.obj.BoardViewerColors

    @BoardViewerVisibility.setter
    def BoardViewerVisibility(self, BoardViewerVisibility):
        self.obj.BoardViewerVisibility=BoardViewerVisibility

    @property
    def ScriptEditor(self):
        return self.obj.ScriptEditor

    @BoardViewerColors.setter
    def BoardViewerColors(self, BoardViewerColors):
        self.obj.BoardViewerColors=BoardViewerColors

    @property
    def ScriptEditorWatchWindow(self):
        return self.obj.ScriptEditorWatchWindow

    @ScriptEditor.setter
    def ScriptEditor(self, ScriptEditor):
        self.obj.ScriptEditor=ScriptEditor

    @property
    def OutputWindow(self):
        return self.obj.OutputWindow

    @ScriptEditorWatchWindow.setter
    def ScriptEditorWatchWindow(self, ScriptEditorWatchWindow):
        self.obj.ScriptEditorWatchWindow=ScriptEditorWatchWindow

    @property
    def InstalledOptions(self):
        return self.obj.InstalledOptions

    @OutputWindow.setter
    def OutputWindow(self, OutputWindow):
        self.obj.OutputWindow=OutputWindow

    @InstalledOptions.setter
    def InstalledOptions(self, InstalledOptions):
        self.obj.InstalledOptions=InstalledOptions

