# coding=utf-8
"""
This file is autogenerated by python script @ 20200808-12:11:09
"""
import sys
import os
import datetime,time

#from PowerPCBEnums import *

__author__ = 'SayCV'

import logging

logger = logging.getLogger(__name__)

class IHyperLynxDrcElecNet3(object):
    def __init__(self, obj=None):
        self.obj = obj


    @property
    def Clock(self):
        return self.obj.Clock

    @property
    def NamedByUser(self):
        return self.obj.NamedByUser

    @property
    def LowPower(self):
        return self.obj.LowPower

    @Clock.setter
    def Clock(self, Clock):
        self.obj.Clock=Clock

    @property
    def NetClass(self):
        return self.obj.NetClass

    @property
    def RadiationClass(self):
        return self.obj.RadiationClass

    @property
    def SusceptibilityClass(self):
        return self.obj.SusceptibilityClass

    @property
    def Analog(self):
        return self.obj.Analog

    @LowPower.setter
    def LowPower(self, LowPower):
        self.obj.LowPower=LowPower

    @property
    def Noisy(self):
        return self.obj.Noisy

    @Analog.setter
    def Analog(self, Analog):
        self.obj.Analog=Analog

    @property
    def Sensitive(self):
        return self.obj.Sensitive

    @Noisy.setter
    def Noisy(self, Noisy):
        self.obj.Noisy=Noisy

    @property
    def SetName(self):
        return self.obj.SetName

    @property
    def SetVoltage(self):
        return self.obj.SetVoltage

    @property
    def SetFrequency(self):
        return self.obj.SetFrequency

    @property
    def SetSwitchFrequency(self):
        return self.obj.SetSwitchFrequency

    @property
    def SetKneeFrequency(self):
        return self.obj.SetKneeFrequency

    @property
    def GetPinsByType(self):
        return self.obj.GetPinsByType

    @property
    def GetCouplingNetCapacitance(self):
        return self.obj.GetCouplingNetCapacitance

    @property
    def GetCouplingNetInductance(self):
        return self.obj.GetCouplingNetInductance

    @property
    def GetPadsByType(self):
        return self.obj.GetPadsByType

    @property
    def MountingHoles(self):
        return self.obj.MountingHoles

    @property
    def VoltageSwing(self):
        return self.obj.VoltageSwing

    @Sensitive.setter
    def Sensitive(self, Sensitive):
        self.obj.Sensitive=Sensitive

    @property
    def CrosstalkVoltageEstimate(self):
        return self.obj.CrosstalkVoltageEstimate

    @VoltageSwing.setter
    def VoltageSwing(self, VoltageSwing):
        self.obj.VoltageSwing=VoltageSwing

