# coding=utf-8
"""
This file is autogenerated by python script @ 20200808-12:11:09
"""
import sys
import os
import datetime,time

#from PowerPCBEnums import *

__author__ = 'SayCV'

import logging

logger = logging.getLogger(__name__)

class IHyperLynxDrcDisplayControl(object):
    def __init__(self, obj=None):
        self.obj = obj


    @property
    def Dim(self):
        return self.obj.Dim

    @Dim.setter
    def Dim(self, Dim):
        self.obj.Dim=Dim

    @property
    def DimIntensity(self):
        return self.obj.DimIntensity

    @DimIntensity.setter
    def DimIntensity(self, DimIntensity):
        self.obj.DimIntensity=DimIntensity

    @property
    def Grid(self):
        return self.obj.Grid

    @Grid.setter
    def Grid(self, Grid):
        self.obj.Grid=Grid

    @property
    def GridStepX(self):
        return self.obj.GridStepX

    @GridStepX.setter
    def GridStepX(self, GridStepX):
        self.obj.GridStepX=GridStepX

    @property
    def GridStepY(self):
        return self.obj.GridStepY

    @GridStepY.setter
    def GridStepY(self, GridStepY):
        self.obj.GridStepY=GridStepY

    @property
    def ShowInfoTips(self):
        return self.obj.ShowInfoTips

    @ShowInfoTips.setter
    def ShowInfoTips(self, ShowInfoTips):
        self.obj.ShowInfoTips=ShowInfoTips

    @property
    def ShowUnconnectedPins(self):
        return self.obj.ShowUnconnectedPins

    @ShowUnconnectedPins.setter
    def ShowUnconnectedPins(self, ShowUnconnectedPins):
        self.obj.ShowUnconnectedPins=ShowUnconnectedPins

    @property
    def ShowUnconnectedPads(self):
        return self.obj.ShowUnconnectedPads

    @ShowUnconnectedPads.setter
    def ShowUnconnectedPads(self, ShowUnconnectedPads):
        self.obj.ShowUnconnectedPads=ShowUnconnectedPads

    @property
    def BackgroundColor(self):
        return self.obj.BackgroundColor

    @BackgroundColor.setter
    def BackgroundColor(self, BackgroundColor):
        self.obj.BackgroundColor=BackgroundColor

    @property
    def HighlightColor(self):
        return self.obj.HighlightColor

    @HighlightColor.setter
    def HighlightColor(self, HighlightColor):
        self.obj.HighlightColor=HighlightColor

    @property
    def SelectionColor(self):
        return self.obj.SelectionColor

    @SelectionColor.setter
    def SelectionColor(self, SelectionColor):
        self.obj.SelectionColor=SelectionColor

    @property
    def BoardOutlineColor(self):
        return self.obj.BoardOutlineColor

    @BoardOutlineColor.setter
    def BoardOutlineColor(self, BoardOutlineColor):
        self.obj.BoardOutlineColor=BoardOutlineColor

    @property
    def ProblemNetsColor(self):
        return self.obj.ProblemNetsColor

    @ProblemNetsColor.setter
    def ProblemNetsColor(self, ProblemNetsColor):
        self.obj.ProblemNetsColor=ProblemNetsColor

    @property
    def CompNoModelColor(self):
        return self.obj.CompNoModelColor

    @property
    def GetObjectColor(self):
        return self.obj.GetObjectColor

    @property
    def SetObjectColor(self):
        return self.obj.SetObjectColor

    @property
    def GetObjectVisibility(self):
        return self.obj.GetObjectVisibility

    @property
    def SetObjectVisibility(self):
        return self.obj.SetObjectVisibility

    @CompNoModelColor.setter
    def CompNoModelColor(self, CompNoModelColor):
        self.obj.CompNoModelColor=CompNoModelColor

